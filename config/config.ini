# Divergent Inference Architecture Configuration

[model]
# Model settings
;model_name = gpt2-xl
;model_name = microsoft/Phi-3.5-mini-instruct
model_name = Qwen/Qwen3-1.7B
device = cuda
pad_token_mode = eos

[generation]
# Stem Generation parameters

seed = 42
# max token depth of tree - nodes >= max_depth will not have stems generated
max_depth = 20
# token length of each stem - generally <= 12 is recommended; long stems become difficult to cluster
stem_length = 10
# range of stem tokens to search for pruning location: 1=full stem, .5=last half, 0=no pruning
prune_range = 0.3
# initial number of stems to generate and attempt to cluster at each node
num_stems = 256
# max possible stems at a node - if no clusters are found with num_stems, additional stems will be generated up to max_stems_per_node
max_stems_per_node = 512
# number of stems to generate per forward pass - larger batch sizes may be faster, but will also consume more memory
batch_size = 256

# Token-level filtering
# increasing temperature creates more diverse stems, and may require a greater num_stems
# value to generate a sufficient amount for effective cluster formation
temperature = 0.9
top_k = 0
top_p = 0.7

[embeddings]
# Embedding model for semantic analysis
;model_name = all-MiniLM-L6-v2
model_name = paraphrase-mpnet-base-v2
batch_size = 256
# Normalized embeddings generally make clustering easier, but may reduce nuance in quantifying semantic diversity
# When false, be wary of using larger prune_range values, as the embeddings become more sensitive to variations in stem length
normalize = false

[clustering]
# Semantic clustering parameters
cluster_type = hierarchical
;cluster_type = dbscan
# min_sample_ratio is the percentage of total generated node stems required to form a cluster
# if a potential cluster doesn't contain (min_sample_ratio * num_stems),
# it is discarded and its stems will be considered noise
min_sample_ratio = 0.12

[hi-clustering]
# hierarchical clustering parameters
linkage_criterion = ward
# less distance creates more clusters with greater semantic similarity and fewer stems
cut_distance = 0.52
# force returning the largest cluster even if it doesn't meet the min_sample_ratio
# nodes with 0 clusters will simply terminate
force_cluster = false

[DBSCAN-clustering]
# DBSCAN clustering parameters
# smaller values require samples to be semantically closer to form a cluster
# larger values allow samples to be semantically further apart to form a cluster
eps = 0.3

[visualization]
# Visualization settings
template_path = templates/tree_template.html
output_dir = ./output/renders

[analysis]
# Analysis parameters
output_dir = ./output/reports
